@use 'sass:list';

// 접근성 글자 숨기기
@mixin text-hidden {
  text-indent: -9999em;
  overflow: hidden;
}

// 접근성 영역 숨기기
@mixin blind {
  position: absolute;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  margin: -1px;
  overflow: hidden;
}

// 말줄임
@mixin ellipsis($line, $line-height: 1.5) {
  display: -webkit-box;
  max-height: calc($line-height * $line * 1em); //ie 크로스브라우징
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
}

// Flex
@mixin flex($display: flex, $h: null, $v: null, $d: null, $w: null) {
  display: $display;
  @if $d != null {
    flex-direction: $d;
  }
  @if $h != null {
    justify-content: $h;
  }
  @if $v != null {
    align-items: $v;
  }
  @if $w != null {
    flex-wrap: $w;
  }
  @content;
}

// Color mode
@mixin color-mode($mode: light, $root: false) {
  @if $color-mode-type == 'media-query' {
    @if $root == true {
      @media (prefers-color-scheme: $mode) {
        :root {
          @content;
        }
      }
    } @else {
      @media (prefers-color-scheme: $mode) {
        @content;
      }
    }
  } @else {
    .theme-#{$mode} {
      @content;
    }
  }
}

// media query
$mobile: 1023.98px;
$tablet: 768px;
$laptop: 1024px;
$desktop: 1280px;

@mixin desktop($breakpoint: up) {
  @if $breakpoint == up {
    @media screen and (min-width:#{$desktop}) {
      @content;
    }
  } @else if $breakpoint == down {
    @media screen and (max-width:#{$desktop - 0.02}) {
      @content;
    }
  }
}
@mixin laptop($breakpoint: up) {
  @if $breakpoint == up {
    @media screen and (min-width:#{$laptop}) {
      @content;
    }
  } @else if $breakpoint == down {
    @media screen and (max-width:#{$laptop - 0.02}) {
      @content;
    }
  }
}
@mixin tablet($breakpoint: up) {
  @if $breakpoint == up {
    @media screen and (min-width:#{$tablet}) {
      @content;
    }
  } @else if $breakpoint == down {
    @media screen and (max-width:#{$tablet - 0.02}) {
      @content;
    }
  }
}
@mixin mobile {
  @media screen and (max-width:#{$mobile}) {
    @content;
  }
}

// scrollbar
@mixin scrollbar() {
  margin-right: -10px;
  padding-right: 8px;
  scrollbar-gutter: stable;
  overflow-y: auto;
  &::-webkit-scrollbar {
    height: 2px;
    width: 2px;
  }
  &::-webkit-scrollbar-thumb {
    background-color: var(--ncp-color-gray-150);
    border-radius: var(--ncp-border-radius-max);
  }
  &::-webkit-scrollbar-track {
    background-color: transparent;
  }
  @supports (-webkit-touch-callout: none) {
    padding-right: 10px;
  }
}

// 가상 엘리먼트(::before, ::after)
@mixin el-pseudo($w: 1px, $h: 1px, $display: block) {
  width: $w;
  height: $h;
  display: $display;
  content: '';
}

// Position Layout
@mixin position($p: absolute, $t: auto, $l: auto, $b: auto, $r: auto, $i: null) {
  position: $p;
  top: $t;
  left: $l;
  bottom: $b;
  right: $r;
  @if $i != null {
    z-index: $i;
  }
}

// Grid Layout
@mixin grid($gap: 0, $c: null, $r: null) {
  display: grid;
  gap: $gap;
  @if $c != null {
    grid-template-columns: repeat($c, minmax(0, 1fr));
  }
  @if $r != null {
    grid-template-rows: repeat($r, minmax(0, 1fr));
  }
  @content;
}

// 텍스트 밑줄 효과
$border-width-base: 1px;

@mixin hover-underline($w: 100%, $h: $border-width-base, $alpha: 0) {
  position: relative;
  &::before {
    @include position($b: 0, $l: 0, $i: 1);
    @include el-pseudo($w, $h);
    transition: opacity 0.2s linear;
    background-color: currentColor;
    opacity: $alpha;
  }
  &:hover::before {
    width: 100%;
    opacity: 1;
  }
}

// 하단 플로팅 요소
@mixin sticky-bottom($b: 0, $padding-bottom: 0px) {
  position: sticky;
  bottom: $b;
  padding-bottom: calc($padding-bottom + env(safe-area-inset-bottom)) !important;
  will-change: transform;
  z-index: 5;
}

// 구분선
@mixin separator($side: right, $height: 0.625rem, $color: var(--ncp-color-gray-150), $gap: 8px) {
  /* @if not index(right left, $side) { 
    Sass 컴파일러가 이 문법을 구문 오류로 처리해서 빌드 에러남
  */
  @if not list.index((right, left), $side) {
    @error 'separator mixin: $side must be "right" or "left".';
  }

  position: relative;
  padding-#{$side}: calc($gap + 1px);

  &::after {
    @include el-pseudo(1px, $height);
    position: absolute;
    #{$side}: 0;
    right: 0;
    top: 50%;
    margin-top: calc($height * -0.5);
    background-color: $color;
  }
}

// 구분점
@mixin separatorDot(
  $side: right,
  $width: 3px,
  $height: 3px,
  $color: var(--ncp-color-foreground),
  $gap: 6px
) {
  /* @if not index(right left, $side) { 
    Sass 컴파일러가 이 문법을 구문 오류로 처리해서 빌드 에러남
  */
  @if not list.index((right, left), $side) {
    @error 'separatoDot mixin: $side must be "right" or "left".';
  }

  position: relative;
  padding-#{$side}: calc($gap + $width);

  &::after {
    @include el-pseudo($width, $height);
    position: absolute;
    #{$side}: 0;
    right: 0;
    top: 50%;
    margin-top: calc($height * -0.5);
    background-color: $color;
    border-radius: var(--ncp-border-radius-max);
  }
}
