@use '@shared/styles/abstracts' as *;

/* MeInfo */
.root {
  --mespace-avatar-width: #{rem(74px)};

  position: relative;
  padding: var(--ncp-spacing-x8) var(--ncp-layout-padding-x) var(--ncp-spacing-x12);
  background-color: var(--ncp-color-background);
}
// 스크롤 시 축약형 + 상단 고정으로 전환
.compact {
  --avatar-size-mespace: #{rem(32px)};
  width: 100%;
  min-width: 1px;
  height: rem(56px);
  position: sticky;
  top: var(--ncp-layout-header-height);
  left: 0;
  margin-top: calc(rem(56px) * -1);
  padding: var(--ncp-spacing-x3) var(--ncp-layout-padding-x);
  @include flex($v: center);
  column-gap: var(--ncp-spacing-x2);
  transition: transform var(--ncp-transition-fast);
  background-color: var(--ncp-color-background);
  overflow: hidden;
  z-index: 11;

  &[data-state='hide'] {
    transform: translateY(-100%);
    pointer-events: none;
  }

  &[data-state='show'] {
    transform: translateY(0);
    pointer-events: all;
  }

  [role='heading'] {
    @include ellipsis(1);
    margin-left: var(--ncp-spacing-x2);
  }
  .badge {
    position: static;
    flex-shrink: 0;
  }
}
.compactOnly {
  position: relative;
  top: 0;
  margin-top: unset;

  .gem {
    position: static;
    margin-left: auto;
  }
}

.info {
  @include flex($d: column);
  gap: var(--ncp-spacing-x8);
}
.avatar {
  position: relative;
  align-self: flex-start;
  line-height: var(--ncp-line-height-fit);
}
.title {
  padding-inline: var(--ncp-spacing-indent);
}
.likes {
  --icon-color: var(--ncp-color-gray-500);
  @include flex($v: center);
  column-gap: var(--ncp-spacing-x2);
}

.traits {
  padding-inline: var(--ncp-spacing-indent);
  @include flex($v: center, $w: wrap);
  gap: var(--ncp-spacing-x3);
  font-size: var(--ncp-font-size-12);
  font-weight: var(--ncp-font-weight-semibold);
}

.trait {
  position: relative;

  &:not(:first-child) {
    padding-left: calc(var(--ncp-spacing-x3) + 2px);

    &::before {
      position: absolute;
      top: 50%;
      left: 0;
      @include el-pseudo(2px, 2px);
      border-radius: var(--ncp-border-radius-max);
      background-color: currentColor;
    }
  }
}

.brands {
  --mespace-brand-bar-height: #{rem(56px)};
  position: relative;
  margin-top: var(--ncp-spacing-x12);
  @include flex($d: column);
  row-gap: var(--ncp-spacing-x4);

  &:has(:nth-child(2)) {
    padding-right: var(--ncp-spacing-x18);
  }

  [class*='IconButton_root'] {
    position: absolute;
    top: calc(var(--mespace-brand-bar-height) / 2 - rem(20px) / 2);
    right: 0;
  }
}
.brand {
  border-radius: var(--ncp-border-radius-base);
  background-color: var(--ncp-color-bg-1);
  overflow: hidden;

  [class*='Image_root'] {
    width: rem(32px);
    aspect-ratio: 1;
    flex-shrink: 0;
    border-radius: var(--ncp-border-radius-max);
  }

  &.hidden {
    display: none;
  }
}
.brandLink {
  height: var(--mespace-brand-bar-height);
  padding-inline: var(--ncp-spacing-x6);
  align-items: center;
  column-gap: var(--ncp-spacing-x6);
  font-weight: var(--ncp-font-weight-semibold);
}
/* MeGem */
.gem {
  position: absolute;
  top: var(--ncp-spacing-x12);
  right: var(--ncp-spacing-x12);
}

/* MeBadge */
.badge {
  position: absolute;
  right: -4px;
  bottom: -4px;
}
