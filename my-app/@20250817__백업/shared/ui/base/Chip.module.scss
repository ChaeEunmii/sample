@use '@shared/styles/abstracts' as *;

.root {
  --chip-gap: var(--ncp-spacing-x2);
  --chip-min-width: 2rem;
  --chip-border-color: var(--ncp-color-gray-150);
  --chip-text-color: var(--ncp-color-gray-500);
  --chip-text-align: center;
  --chip-label-justify-contents: center;
}
.container {
  @include flex($display: inline-flex, $w: wrap);
  gap: var(--ncp-spacing-x4);
  // columns 'auto'가 아닌 경우 스타일
  &.gridColumns {
    @include grid($gap: var(--chip-gap)) {
      grid-template-columns: repeat(
        var(--chip-grid-columns, auto-fill),
        minmax(var(--chip-min-width), 1fr)
      );
    }
  }
}
.chip {
  display: inline-block;
  &[aria-hidden='true'] {
    display: none !important;
  }
}
.input {
  @include blind;
  &:checked + .label {
    --chip-border-color: var(--ncp-color-foreground);
    --chip-text-color: var(--ncp-color-foreground);
  }
}
.label {
  min-height: rem(44px);
  position: relative;
  @include flex(flex, var(--chip-label-justify-contents), center);
  padding-inline: var(--ncp-spacing-x6);
  color: var(--chip-text-color);
  font-weight: var(--ncp-font-weight-medium);
  line-height: var(--ncp-line-height-fit);
  text-align: var(--chip-text-align);
  border: var(--ncp-border-width-base) solid var(--chip-border-color, transparent);
  border-radius: var(--ncp-border-radius-base);
  cursor: pointer;
  white-space: pre-line;
  transition:
    border-color var(--ncp-transition-fast),
    background-color var(--ncp-transition-fast);

  &.disabled {
    --chip-text-color: var(--ncp-color-gray-850);
    cursor: not-allowed;
  }
}

// type swiper
.swiper {
  user-select: none;
  :global(.swiper-wrapper) {
    display: flex;
  }
}
.swiperColumns {
  position: relative;
  flex: 0 1 100%;
  min-width: 25%;
  padding-left: var(--ncp-spacing-x4);
  &:first-child {
    padding-left: 0;
  }
  .chip {
    width: 100%;
  }
}

// variant
.outlined {
  --chip-min-width: #{rem(80px)};
  --chip-text-color: var(--ncp-color-gray-700);
  .label {
    padding: var(--ncp-spacing-x6) var(--ncp-spacing-x4);
    min-width: var(--chip-min-width);
    &.disabled {
      --chip-text-color: var(--ncp-color-gray-500);
      background-color: var(--ncp-color-gray-100);
    }
  }
  .input:checked + .label {
    font-weight: var(--ncp-font-weight-semibold);
  }
}

.period {
  --chip-min-width: #{rem(80px)};
  .label {
    min-height: rem(40px);
    font-size: var(--ncp-font-size-14);
  }
}

.filled {
  .label {
    --chip-text-color: var(--ncp-color-gray-500);
    --chip-border-color: var(--ncp-color-gray-150);
    background-color: var(--ncp-color-background);
    height: rem(40px);
  }
  .input:checked + .label {
    --chip-text-color: var(--ncp-color-background);
    --chip-border-color: var(--ncp-color-foreground);
    background-color: var(--ncp-color-foreground);
  }
}

.buttons {
  .container {
    gap: var(--ncp-spacing-x4);
  }
  .label {
    --chip-text-color: var(--ncp-color-gray-900);
    gap: var(--ncp-spacing-x2);
    height: rem(44px);
    font-weight: var(--ncp-font-weight-semibold);
  }
}

// size
.small {
  .label {
    font-size: var(--ncp-font-size-13);
    line-height: var(--ncp-line-height-18);
    min-width: rem(36px);
    min-height: rem(34px);
    height: rem(34px);
    border-radius: var(--ncp-border-radius-s);
  }
}
.large {
  .container {
    gap: var(--ncp-spacing-x4);
  }
  .label {
    font-size: var(--ncp-font-size-14);
    line-height: var(--ncp-line-height-20);
    min-height: rem(60px);
    height: rem(60px);
    border-radius: var(--ncp-border-radius-base);
  }
}

//round
.round {
  .label {
    border-radius: var(--ncp-border-radius-max);
    padding-inline: var(--ncp-spacing-x6);
  }
}
